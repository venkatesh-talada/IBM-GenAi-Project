#!/usr/bin/env python3
"""
Setup script to create .env file with API keys
"""

import os
import secrets

def create_env_file():
    """Create .env file with user input"""
    
    print("üîß Setting up your .env file for the Gen AI Project")
    print("=" * 50)
    
    # Check if .env already exists
    if os.path.exists('.env'):
        print("‚ö†Ô∏è  .env file already exists!")
        response = input("Do you want to overwrite it? (y/N): ").lower()
        if response != 'y':
            print("Setup cancelled.")
            return
    
    # Get API keys from user
    print("\nüìù Enter your API keys:")
    print("-" * 30)
    
    # Hugging Face Token
    print("\n1. Hugging Face Token:")
    print("   - Go to: https://huggingface.co/settings/tokens")
    print("   - Create a new token with 'Read' permissions")
    print("   - Or use your existing token")
    hf_token = input("   Enter your Hugging Face token: ").strip()
    
    # IBM Granite API Key (optional)
    print("\n2. IBM Granite API Key (optional):")
    print("   - The model might work without this")
    print("   - If you need access, visit: https://huggingface.co/ibm-granite/granite-3.3-2b-instruct")
    granite_key = input("   Enter your IBM Granite API key (or press Enter to skip): ").strip()
    
    # Generate a secure secret key
    secret_key = secrets.token_urlsafe(32)
    
    # Create .env content
    env_content = f"""# API Keys and Configuration
# Generated by setup_env.py

# Hugging Face API Token
HUGGINGFACE_API_TOKEN={hf_token}

# IBM Granite Model API Key (optional)
GRANITE_API_KEY={granite_key}

# Flask Configuration
FLASK_ENV=development
FLASK_DEBUG=True
SECRET_KEY={secret_key}

# Model Configuration
MODEL_NAME=ibm-granite/granite-3.3-2b-instruct
MAX_LENGTH=2048
TEMPERATURE=0.7

# Optional: Database configuration (for future use)
# DATABASE_URL=sqlite:///app.db

# Optional: Redis configuration (for future use)
# REDIS_URL=redis://localhost:6379/0
"""
    
    # Write .env file
    try:
        with open('.env', 'w') as f:
            f.write(env_content)
        
        print("\n‚úÖ .env file created successfully!")
        print(f"üìÅ Location: {os.path.abspath('.env')}")
        
        print("\nüîí Security notes:")
        print("- The .env file is already in .gitignore")
        print("- Never commit this file to version control")
        print("- Keep your API keys secure")
        
        print("\nüöÄ Next steps:")
        print("1. Activate your virtual environment")
        print("2. Run: python app.py")
        print("3. Visit: http://localhost:5000")
        
    except Exception as e:
        print(f"‚ùå Error creating .env file: {e}")

if __name__ == "__main__":
    create_env_file() 